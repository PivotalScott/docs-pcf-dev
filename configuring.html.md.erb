---
breadcrumb: PCF Dev Documentation
title: Configuring PCF Dev
owner: PCF Dev
---
<p class="note"><strong>Note</strong>: If you are trying to use version 0.30 or earlier, please visit this <a href="./configuring-legacy.html">page</a></p>

PCF Dev supports several different configurations. This topic describes how to start PCF Dev with specific memory usage, core count usage, custom startup .iso files, and Cloud Foundry services, among others. It also describes ease-of-use functionality, including automatically targeting PCF Dev and trusting PCF Dev certificates. 

## <a id="start-options"></a>Configure PCF Dev

The `cf dev start` command supports the following configuration-specific flags at start up: 

| flag |  description |
|---|---|---|---|
| `-c number-of-cores`  | Specify the number of processor cores used by VM. Default: 4. |
| `-m  memory-in-mb` |  Specify memory to allocate for VM. Default: 8 GB. |
| `-r registry1,registry2,...`  | Specify Docker registries that PCF Dev will use without SSL validation. Use `host:port` format. |


### <a id="insecure-docker-registries"></a>Insecure Docker Registries

PCF Dev allows applications to be pushed from Docker images. By default, these images must be hosted on Docker Hub. The `-r` flag allows you to specify Docker registries that PCF Dev should allow you to push from, even if those registries don't have valid SSL certificates.  The following example shows how to start PCF Dev and push an app using an existing insecure docker registry on your host running on port 5000.

<pre class='terminal'>
$ cf dev start -r host.pcfdev.io:5000
...
$ cf dev target
Successfully logged in to api.local.pcfdev.io as user.
$ cf push -o host.pcfdev.io:5000/repository/image
</pre>
